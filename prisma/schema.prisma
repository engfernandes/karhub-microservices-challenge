generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Country {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  states    State[]

  @@map("countries")
}

model State {
  id        Int      @id @default(autoincrement())
  name      String
  countryId Int
  country   Country  @relation(fields: [countryId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cities    City[]

  @@unique([countryId, name])
  @@map("states")
}

model City {
  id        Int       @id @default(autoincrement())
  name      String
  stateId   Int
  state     State     @relation(fields: [stateId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  breweries Brewery[]

  @@unique([stateId, name])
  @@map("cities")
}

model BeerStyle {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  minTemperature Decimal? @db.Decimal(3, 1)
  maxTemperature Decimal? @db.Decimal(3, 1)
  description    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  beers          Beer[]

  @@map("beer_styles")
}

model Brewery {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  cityId    Int
  city      City     @relation(fields: [cityId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  beers     Beer[]

  @@map("breweries")
}

model Beer {
  id        Int       @id @default(autoincrement())
  name      String
  abv       Decimal?  @db.Decimal(4, 2)
  styleId   Int
  style     BeerStyle @relation(fields: [styleId], references: [id])
  breweryId Int
  brewery   Brewery   @relation(fields: [breweryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([breweryId, name])
  @@map("beers")
}
